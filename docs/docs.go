// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag/v2"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "components": {"schemas":{"api.DiscoverQueryRequest":{"description":"Request to discover information about an SPL query","properties":{"query":{"description":"SPL query to analyze","example":"search sourcetype=access_combined | stats count by src_ip","type":"string"}},"required":["query"],"type":"object"},"api.DiscoverQueryResponse":{"description":"Response from discovering SPL query information","properties":{"query":{"description":"Original query","example":"search sourcetype=access_combined | stats count by src_ip","type":"string","x-order":"1"},"query_info":{"$ref":"#/components/schemas/mapper.QueryInfo"},"success":{"description":"Whether the discovery was successful","example":true,"type":"boolean","x-order":"3"}},"type":"object"},"api.ErrorResponse":{"description":"Standard error response","properties":{"code":{"description":"HTTP status code","example":400,"type":"integer","x-order":"3"},"error":{"description":"Always true for error responses","example":true,"type":"boolean","x-order":"1"},"message":{"description":"Human-readable error message","example":"Invalid request","type":"string","x-order":"2"}},"type":"object"},"api.HealthResponse":{"description":"Health check response","properties":{"service":{"description":"Service name","example":"spl-toolkit-api","type":"string","x-order":"3"},"status":{"description":"Service health status","example":"healthy","type":"string","x-order":"1"},"version":{"description":"Service version","example":"1.0.0","type":"string","x-order":"2"}},"type":"object"},"api.LoadMappingsRequest":{"description":"Request to load field mappings into the server","properties":{"config":{"$ref":"#/components/schemas/mapper.MappingConfig"},"mappings":{"description":"Simple field mappings","items":{"$ref":"#/components/schemas/mapper.FieldMapping"},"type":"array","uniqueItems":false,"x-order":"1"}},"type":"object"},"api.LoadMappingsResponse":{"description":"Response from loading field mappings","properties":{"mappings_count":{"description":"Number of field mappings loaded","example":5,"type":"integer","x-order":"2"},"rules_count":{"description":"Number of conditional rules loaded","example":2,"type":"integer","x-order":"3"},"success":{"description":"Whether the mappings were loaded successfully","example":true,"type":"boolean","x-order":"1"}},"type":"object"},"api.MapQueryRequest":{"description":"Request to map fields in an SPL query. For stateless operation, provide either 'mappings' for simple field mappings or 'config' for advanced mapping configuration with conditional rules.","properties":{"config":{"$ref":"#/components/schemas/mapper.MappingConfig"},"context":{"additionalProperties":{},"description":"Optional context for mapping","type":"object","x-order":"2"},"mappings":{"description":"Simple field mappings (for stateless operation)","items":{"$ref":"#/components/schemas/mapper.FieldMapping"},"type":"array","uniqueItems":false,"x-order":"3"},"query":{"description":"SPL query to map","example":"search src_ip=192.168.1.1","type":"string","x-order":"1"}},"required":["query"],"type":"object"},"api.MapQueryResponse":{"description":"Response from mapping an SPL query","properties":{"mapped_query":{"description":"Query with mapped field names","example":"search source_ip=192.168.1.1","type":"string","x-order":"2"},"original_query":{"description":"Original input query","example":"search src_ip=192.168.1.1","type":"string","x-order":"1"},"success":{"description":"Whether the mapping was successful","example":true,"type":"boolean","x-order":"3"}},"type":"object"},"api.ValidateQueryRequest":{"description":"Request to validate an SPL query","properties":{"query":{"description":"SPL query to validate","example":"search index=web | stats count","type":"string"}},"required":["query"],"type":"object"},"api.ValidateQueryResponse":{"description":"Response from validating an SPL query","properties":{"error":{"description":"Error message if validation failed","example":"syntax error at position 10","type":"string","x-order":"4"},"query":{"description":"Original query","example":"search index=web | stats count","type":"string","x-order":"1"},"success":{"description":"Whether the validation was successful","example":true,"type":"boolean","x-order":"3"},"valid":{"description":"Whether the query is valid","example":true,"type":"boolean","x-order":"2"}},"type":"object"},"api.ValidationError":{"description":"Validation error for a specific field","properties":{"field":{"description":"Field that failed validation","example":"query","type":"string","x-order":"1"},"message":{"description":"Validation error message","example":"field is required","type":"string","x-order":"2"}},"type":"object"},"api.ValidationErrorResponse":{"description":"Response with detailed validation errors","properties":{"code":{"description":"HTTP status code","example":400,"type":"integer","x-order":"3"},"error":{"description":"Always true for error responses","example":true,"type":"boolean","x-order":"1"},"message":{"description":"General error message","example":"Validation failed","type":"string","x-order":"2"},"validation_errors":{"description":"List of specific validation errors","items":{"$ref":"#/components/schemas/api.ValidationError"},"type":"array","uniqueItems":false,"x-order":"4"}},"type":"object"},"mapper.Condition":{"properties":{"children":{"description":"For combination conditions (AND/OR)","items":{"$ref":"#/components/schemas/mapper.Condition"},"type":"array","uniqueItems":false},"field":{"type":"string"},"operator":{"description":"\"equals\", \"contains\", \"regex\", \"exists\", \"not_exists\"","type":"string"},"type":{"description":"\"field_value\", \"field_exists\", \"sourcetype\", \"source\", \"combination\"","type":"string"},"value":{}},"type":"object"},"mapper.ConditionalRule":{"properties":{"conditions":{"items":{"$ref":"#/components/schemas/mapper.Condition"},"type":"array","uniqueItems":false},"description":{"type":"string"},"enabled":{"type":"boolean"},"id":{"type":"string"},"mappings":{"items":{"$ref":"#/components/schemas/mapper.FieldMapping"},"type":"array","uniqueItems":false},"name":{"type":"string"},"priority":{"type":"integer"}},"type":"object"},"mapper.DataModelFieldMapping":{"properties":{"source_field":{"type":"string"},"source_path":{"description":"For nested datamodel fields","type":"string"},"target_field":{"type":"string"},"target_path":{"type":"string"}},"type":"object"},"mapper.DataModelMapping":{"properties":{"conditional_mappings":{"items":{"$ref":"#/components/schemas/mapper.ConditionalRule"},"type":"array","uniqueItems":false},"field_mappings":{"items":{"$ref":"#/components/schemas/mapper.DataModelFieldMapping"},"type":"array","uniqueItems":false},"source_datamodel":{"type":"string"},"target_datamodel":{"type":"string"}},"type":"object"},"mapper.FieldMapping":{"properties":{"source":{"type":"string"},"target":{"type":"string"}},"type":"object"},"mapper.MappingConfig":{"description":"Advanced mapping configuration with conditional rules (for stateless operation)","properties":{"datamodels":{"items":{"$ref":"#/components/schemas/mapper.DataModelMapping"},"type":"array","uniqueItems":false},"description":{"type":"string"},"mappings":{"items":{"$ref":"#/components/schemas/mapper.FieldMapping"},"type":"array","uniqueItems":false},"metadata":{"additionalProperties":{},"type":"object"},"name":{"type":"string"},"rules":{"items":{"$ref":"#/components/schemas/mapper.ConditionalRule"},"type":"array","uniqueItems":false},"version":{"type":"string"}},"type":"object","x-order":"2"},"mapper.QueryInfo":{"description":"Discovered query information","properties":{"datamodels":{"items":{"type":"string"},"type":"array","uniqueItems":false},"datasets":{"description":"Format: \"DataModel.Dataset\"","items":{"type":"string"},"type":"array","uniqueItems":false},"input_fields":{"items":{"type":"string"},"type":"array","uniqueItems":false},"lookups":{"items":{"type":"string"},"type":"array","uniqueItems":false},"macros":{"items":{"type":"string"},"type":"array","uniqueItems":false},"sources":{"items":{"type":"string"},"type":"array","uniqueItems":false},"sourcetypes":{"items":{"type":"string"},"type":"array","uniqueItems":false}},"type":"object","x-order":"2"}}},
    "info": {"contact":{"email":"support@example.com","name":"SPL Toolkit Support"},"description":"{{escape .Description}}","license":{"name":"MIT","url":"https://opensource.org/licenses/MIT"},"title":"{{.Title}}","version":"{{.Version}}"},
    "externalDocs": {"description":"","url":""},
    "paths": {"/docs":{"get":{"description":"Serve interactive Swagger UI documentation for the SPL Toolkit API","responses":{"200":{"content":{"application/json":{"schema":{"type":"string"}},"text/html":{"schema":{"type":"string"}}},"description":"HTML page with Swagger UI"}},"summary":"Get API documentation","tags":["docs"]}},"/health":{"get":{"description":"Check if the SPL Toolkit API service is healthy and responsive","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.HealthResponse"}}},"description":"Service is healthy"}},"summary":"Get service health status","tags":["health"]}},"/mappings":{"post":{"description":"**WARNING: This is an ephemeral, process-global, development-only endpoint.** Loads field mappings or mapping configuration globally for all subsequent requests. Not suitable for production multi-user environments. Use the mappings/config parameter in /query/map instead.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.LoadMappingsRequest"}}},"description":"Mappings loading request","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.LoadMappingsResponse"}}},"description":"Successfully loaded mappings"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.ValidationErrorResponse"}}},"description":"Invalid request or validation errors"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.ErrorResponse"}}},"description":"Admin endpoints disabled"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.ErrorResponse"}}},"description":"Internal server error"}},"summary":"Load field mappings into the server (ADMIN ONLY - DEV USE)","tags":["mappings"]}},"/openapi.json":{"get":{"description":"Get the OpenAPI 3.1 specification for the SPL Toolkit API in JSON format","responses":{"200":{"content":{"application/json":{"schema":{"additionalProperties":{},"type":"object"}}},"description":"OpenAPI 3.1 specification"}},"summary":"Get OpenAPI specification","tags":["docs"]}},"/query/discover":{"post":{"description":"Analyze an SPL query to discover metadata like datamodels, lookups, macros, sources, and input fields","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.DiscoverQueryRequest"}}},"description":"Query discovery request","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.DiscoverQueryResponse"}}},"description":"Successfully discovered query information"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.ValidationErrorResponse"}}},"description":"Invalid request or validation errors"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.ErrorResponse"}}},"description":"Internal server error"}},"summary":"Discover information about an SPL query","tags":["query"]}},"/query/map":{"post":{"description":"Apply field mappings to transform field names in an SPL query. Supports both stateless operation (provide mappings/config in request) and stateful operation (use pre-loaded mappings). For production use, provide mappings or config in each request to avoid global state.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.MapQueryRequest"}}},"description":"Query mapping request","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.MapQueryResponse"}}},"description":"Successfully mapped the query"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.ValidationErrorResponse"}}},"description":"Invalid request or validation errors"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.ErrorResponse"}}},"description":"Internal server error"}},"summary":"Map fields in an SPL query","tags":["query"]}},"/query/validate":{"post":{"description":"Check if an SPL query has valid syntax and can be parsed correctly","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.ValidateQueryRequest"}}},"description":"Query validation request","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.ValidateQueryResponse"}}},"description":"Query is valid"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.ValidationErrorResponse"}}},"description":"Invalid request structure"},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.ValidateQueryResponse"}}},"description":"Query has invalid syntax"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.ErrorResponse"}}},"description":"Internal server error"}},"summary":"Validate an SPL query","tags":["query"]}}},
    "openapi": "3.1.0",
    "tags": [
        {"description":"Health check operations","name":"health"},
        {"description":"SPL query operations including mapping, discovery, and validation","name":"query"},
        {"description":"Field mapping management operations","name":"mappings"},
        {"description":"API documentation endpoints","name":"docs"}
    ],
    "servers": [
        {"description":"Development server","url":"http://localhost:8080/api/v1"}
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Title:            "SPL Toolkit API",
	Description:      "REST API for the SPL Toolkit library that provides field mapping, query discovery, and validation capabilities for Splunk SPL queries.\nThis API enables programmatic analysis and manipulation of Splunk SPL queries in a robust, language-aware fashion.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
